<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <location path="." inheritInChildApplications="false">
    <system.webServer>
      <!-- ASP.NET Core Module Configuration -->
      <handlers>
        <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
      </handlers>
      
      <aspNetCore processPath="dotnet" 
                  arguments=".\WorkIntakeSystem.API.dll" 
                  stdoutLogEnabled="false" 
                  stdoutLogFile=".\logs\stdout" 
                  hostingModel="inprocess">
        <environmentVariables>
          <environmentVariable name="ASPNETCORE_ENVIRONMENT" value="Production" />
          <environmentVariable name="ASPNETCORE_HTTPS_PORT" value="443" />
        </environmentVariables>
      </aspNetCore>
      
      <!-- Windows Authentication Configuration -->
      <security>
        <authentication>
          <windowsAuthentication enabled="true" />
          <anonymousAuthentication enabled="false" />
        </authentication>
        <authorization>
          <remove users="*" roles="" verbs="" />
          <add accessType="Allow" users="*" />
        </authorization>
      </security>
      
      <!-- IIS Output Caching Configuration -->
      <caching enabled="true" enableKernelCache="true">
        <profiles>
          <add extension=".js" policy="CacheUntilChange" kernelCachePolicy="CacheUntilChange" duration="01:00:00" />
          <add extension=".css" policy="CacheUntilChange" kernelCachePolicy="CacheUntilChange" duration="01:00:00" />
          <add extension=".png" policy="CacheUntilChange" kernelCachePolicy="CacheUntilChange" duration="24:00:00" />
          <add extension=".jpg" policy="CacheUntilChange" kernelCachePolicy="CacheUntilChange" duration="24:00:00" />
          <add extension=".gif" policy="CacheUntilChange" kernelCachePolicy="CacheUntilChange" duration="24:00:00" />
          <add extension=".ico" policy="CacheUntilChange" kernelCachePolicy="CacheUntilChange" duration="7.00:00:00" />
        </profiles>
      </caching>
      
      <!-- Output Caching for API Responses -->
      <staticContent>
        <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="3600" />
      </staticContent>
      
      <!-- Compression -->
      <httpCompression directory="%SystemRoot%\temp\IIS Temporary Compressed Files">
        <scheme name="gzip" dll="%windir%\system32\inetsrv\gzip.dll" />
        <dynamicTypes>
          <add mimeType="text/*" enabled="true" />
          <add mimeType="message/*" enabled="true" />
          <add mimeType="application/json" enabled="true" />
          <add mimeType="application/javascript" enabled="true" />
          <add mimeType="*/*" enabled="false" />
        </dynamicTypes>
        <staticTypes>
          <add mimeType="text/*" enabled="true" />
          <add mimeType="message/*" enabled="true" />
          <add mimeType="application/javascript" enabled="true" />
          <add mimeType="*/*" enabled="false" />
        </staticTypes>
      </httpCompression>
      
      <!-- Request Filtering -->
      <requestFiltering>
        <requestLimits maxAllowedContentLength="104857600" /> <!-- 100MB -->
      </requestFiltering>
      
      <!-- URL Rewrite for SPA -->
      <rewrite>
        <rules>
          <rule name="React Routes" stopProcessing="true">
            <match url=".*" />
            <conditions logicalGrouping="MatchAll">
              <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
              <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
              <add input="{REQUEST_URI}" pattern="^/api/" negate="true" />
            </conditions>
            <action type="Rewrite" url="/" />
          </rule>
        </rules>
      </rewrite>
      
      <!-- HTTP Response Headers -->
      <httpProtocol>
        <customHeaders>
          <add name="X-Content-Type-Options" value="nosniff" />
          <add name="X-Frame-Options" value="DENY" />
          <add name="X-XSS-Protection" value="1; mode=block" />
          <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
        </customHeaders>
      </httpProtocol>
      
      <!-- Application Request Routing (Load Balancing) -->
      <webFarm>
        <server address="server1.domain.local" enabled="true" />
        <server address="server2.domain.local" enabled="true" />
        <applicationRequestRouting>
          <affinity useCookies="true" />
          <loadBalancing algorithm="WeightedRoundRobin" />
        </applicationRequestRouting>
      </webFarm>
      
    </system.webServer>
  </location>
</configuration> 