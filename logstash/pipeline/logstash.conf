input {
  # HTTP input for application metrics and events
  http {
    port => 5044
    codec => json
  }
  
  # File input for application logs
  file {
    path => "/var/log/workintake/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => json
  }
}

filter {
  # Add timestamp if not present
  if ![timestamp] {
    date {
      match => [ "@timestamp", "ISO8601" ]
    }
  }
  
  # Add application metadata
  mutate {
    add_field => {
      "application" => "WorkIntakeSystem"
      "environment" => "development"
    }
  }
  
  # Parse different types of events
  if [event_type] == "metric" {
    mutate {
      add_tag => [ "metric" ]
    }
  }
  
  if [event_type] == "exception" {
    mutate {
      add_tag => [ "exception" ]
    }
  }
  
  if [event_type] == "dependency" {
    mutate {
      add_tag => [ "dependency" ]
    }
  }
  
  if [event_type] == "health_check" {
    mutate {
      add_tag => [ "health_check" ]
    }
  }
  
  # Parse HTTP requests
  if [http_method] {
    mutate {
      add_tag => [ "http_request" ]
    }
  }
  
  # Parse database operations
  if [database_name] {
    mutate {
      add_tag => [ "database" ]
    }
  }
  
  # Parse Redis operations
  if [redis_operation] {
    mutate {
      add_tag => [ "redis" ]
    }
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "workintake-%{+YYYY.MM.dd}"
    template_name => "workintake"
    template => {
      "index_patterns" => ["workintake-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "application" => { "type" => "keyword" }
          "environment" => { "type" => "keyword" }
          "event_type" => { "type" => "keyword" }
          "level" => { "type" => "keyword" }
          "message" => { "type" => "text" }
          "metric_name" => { "type" => "keyword" }
          "value" => { "type" => "float" }
          "tags" => { "type" => "keyword" }
          "exception_type" => { "type" => "keyword" }
          "exception_message" => { "type" => "text" }
          "dependency_type" => { "type" => "keyword" }
          "target" => { "type" => "keyword" }
          "duration_ms" => { "type" => "float" }
          "success" => { "type" => "boolean" }
          "http_method" => { "type" => "keyword" }
          "http_url" => { "type" => "keyword" }
          "status_code" => { "type" => "integer" }
          "database_name" => { "type" => "keyword" }
          "redis_operation" => { "type" => "keyword" }
        }
      }
    }
  }
  
  # Console output for debugging
  stdout {
    codec => rubydebug
  }
} 